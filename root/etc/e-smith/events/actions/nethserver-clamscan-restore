#!/usr/bin/perl
use strict;
use warnings;
use esmith::ConfigDB;
use esmith::DB;
use File::Copy;

my $event = shift;
my $db = esmith::ConfigDB->open() || die 'cannot open configuration database';
my $q = esmith::ConfigDB->open('quarantine') || esmith::ConfigDB->create('quarantine')
    || die 'cannot open quarantine database';

my $restore = $db->get_prop('clamscan','restore') || '';
#my $restoreall = $db->get_prop('clamscan','restoreAll') || 'disabled';

if ($event eq 'nethserver-clamscan-restore-all') {
    my @quarantine = $q->get_all_by_prop(type => 'quarantined');
    foreach my $resto (@quarantine) {
        my $key= $resto->key;
        my $pathquarantine = $q->get_prop($key,'quarantine');
        my $filePath = $q->get_prop($key,'filePath') || '';
        if ($filePath eq '') {
            $filePath = $key;
        }
        move("$pathquarantine","$filePath");
        $q->get($key)->delete if ( -f $filePath);
    }
#   $db->get('clamscan')->delete_prop('restoreAll');
}

elsif ($event eq 'nethserver-clamscan-restore') {
    exit 0 unless $restore;
    my @restore = split(',;,;',$restore);
    my @quarantine = $q->get_all_by_prop(type => 'quarantined');
    foreach my $resto (@restore) {
        foreach my $r (@quarantine) {
            my $key= $r->key;
            my $pathquarantine = $q->get_prop($key,'quarantine');
            my $filePath = $q->get_prop($key,'filePath') || '';
            if ($filePath eq '') {
                $filePath = $key;
            }
            if ($resto eq $filePath) {
                move("$pathquarantine","$resto");
                $q->get($key)->delete if ($q->get($key) && (-f $resto));
            }
        }
    }
    $db->get('clamscan')->delete_prop('restore');
}
